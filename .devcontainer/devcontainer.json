// For format details, see https://aka.ms/devcontainer.json.
{
  "name": "TiFlash",
  "build": {
    "dockerfile": "Dockerfile"
  },
  "hostRequirements": {
    "cpus": 2,
    "memory": "8gb"
  },
  "mounts": [
    // Avoid reinstalling vscode extensions
    "type=volume,source=tiflash-vscode-extensions,target=/root/.vscode-server/extensions",
    // Cache Cargo downloaded deps
    "type=volume,source=tiflash-cargo-registry,target=/root/.cargo/registry",
    "type=volume,source=tiflash-cargo-git,target=/root/.cargo/git",
    // Cache Rust toolchain
    // We have to cache the entire directory due to https://github.com/rust-lang/rustup/issues/1239
    "type=volume,source=tiflash-rustup,target=/root/.rustup",
    // Cache ccache results
    "type=volume,source=tiflash-ccache,target=/root/.cache/ccache",
    // Persist GitHub CLI Config locally in the repository
    "type=bind,source=${localWorkspaceFolder}/.devcontainer/.local_persist/gh,target=/root/.config/gh"
  ],
  // For using a ptrace-based debugger like C++, Go, and Rust
  "runArgs": [
    "--cap-add=SYS_PTRACE",
    "--security-opt",
    "seccomp=unconfined"
  ],
  "customizations": {
    "vscode": {
      "extensions": [
        "llvm-vs-code-extensions.vscode-clangd", // C++ Code Completion
        "jeff-hykin.better-cpp-syntax", // C++ Syntax
        "matepek.vscode-catch2-test-adapter", // Run gtests in UI
        "twxs.cmake",
        "ms-vscode.cmake-tools", // CMake actions in UI
        "bungcip.better-toml", // TOML Syntax highlighting
        "eamodio.gitlens", // Enable more git features
      ],
      "settings": {
        "git.detectSubmodulesLimit": 40,
        "cmake.buildDirectory": "${workspaceFolder}/cmake-build-${buildType}",
        "cmake.statusbar.visibility": "compact",
        "cmake.statusbar.advanced": {
          "ctest": { // We don't use ctest at all
            "visibility": "hidden"
          },
          "kit": { // We rarely change the kit
            "visibility": "icon"
          }
        },
        "clangd.arguments": [
          "--compile-commands-dir=cmake-build-Debug"
        ],
        "cmake.generator": "Ninja",
        "cmake.configureOnOpen": true,
        "testMate.cpp.test.executables": "cmake-build-*/**/gtests_*",
        "terminal.integrated.defaultProfile.linux": "zsh"
      }
    }
  }
}
