=> DBGInvoke __enable_schema_sync_service('true')

=> DBGInvoke __drop_tidb_table(default, test)
=> drop table if exists default.test

=> DBGInvoke __mock_tidb_table(default, test, 'col_1 Int64')
=> DBGInvoke find_region_by_range('','',1)
┌─find_region_by_range("", "", 1)─┐
│ 0                               │
│                                 │
└─────────────────────────────────┘
=> DBGInvoke __region_snapshot(4, 0, 100, default, test)
=> DBGInvoke find_region_by_range('','',1)
┌─find_region_by_range("", "", 1)─┐
│ 1                               │
│ regions: 4                      │
└─────────────────────────────────┘
=> DBGInvoke __raft_insert_row_full(default, test, 4, 2, 1, 0, 10)
=> DBGInvoke __raft_insert_row_full(default, test, 4, 1, 1, 0, 12)
=> DBGInvoke __raft_insert_row_full(default, test, 4, 3, 1, 0, 14)
=> DBGInvoke __raft_insert_row_full(default, test, 4, 4, 4, 1, 0)
=> DBGInvoke __raft_insert_row_full(default, test, 4, 4, 3, 0, 15)
=> DBGInvoke __raft_insert_row_full(default, test, 4, 5, 1, 0, 16)
=> select (*) from default.test " --schema_version "10000000
┌─col_1─┬─_tidb_rowid─┐
│    12 │           1 │
└───────┴─────────────┘
┌─col_1─┬─_tidb_rowid─┐
│    10 │           2 │
│    14 │           3 │
│    16 │           5 │
└───────┴─────────────┘
=> selraw (*) from default.test order by _tidb_rowid, _INTERNAL_VERSION, _INTERNAL_DELMARK
┌─col_1─┬─_tidb_rowid─┬─_INTERNAL_VERSION─┬─_INTERNAL_DELMARK─┐
│    12 │           1 │                 1 │                 0 │
│    10 │           2 │                 1 │                 0 │
│    14 │           3 │                 1 │                 0 │
│    15 │           4 │                 3 │                 0 │
│     0 │           4 │                 4 │                 1 │
│    16 │           5 │                 1 │                 0 │
└───────┴─────────────┴───────────────────┴───────────────────┘
=> selraw nokvstore (*) from default.test order by _tidb_rowid, _INTERNAL_VERSION, _INTERNAL_DELMARK
=> DBGInvoke dump_all_mock_region(default, test)
┌─dump_all_mock_region(default, test)────────────────────┐
│ [region 4] ranges: [0, 100), state: Normal, [write 6 ] │
│ total size: 1                                          │
└────────────────────────────────────────────────────────┘
=> DBGInvoke region_split(4, default, test, 0, 4, 4, 100, 5)
┌─region_split(4, default, test, 0, 4, 4, 100, 5)─┐
│ execute batch split, region 4 into (4,5)        │
└─────────────────────────────────────────────────┘
=> select (*) from default.test
┌─col_1─┬─_tidb_rowid─┐
│    12 │           1 │
│    10 │           2 │
│    14 │           3 │
└───────┴─────────────┘
┌─col_1─┬─_tidb_rowid─┐
│    16 │           5 │
└───────┴─────────────┘
=> selraw (*) from default.test order by _tidb_rowid, _INTERNAL_VERSION, _INTERNAL_DELMARK
┌─col_1─┬─_tidb_rowid─┬─_INTERNAL_VERSION─┬─_INTERNAL_DELMARK─┐
│    12 │           1 │                 1 │                 0 │
│    10 │           2 │                 1 │                 0 │
│    14 │           3 │                 1 │                 0 │
│    15 │           4 │                 3 │                 0 │
│     0 │           4 │                 4 │                 1 │
│    16 │           5 │                 1 │                 0 │
└───────┴─────────────┴───────────────────┴───────────────────┘
=> DBGInvoke dump_all_mock_region(default, test)
┌─dump_all_mock_region(default, test)────────────────────┐
│ [region 5] ranges: [4, 100), state: Normal, [write 3 ] │
│ [region 4] ranges: [0, 4), state: Normal, [write 3 ]   │
│ total size: 2                                          │
└────────────────────────────────────────────────────────┘
=> DBGInvoke find_region_by_range('','',1)
┌─find_region_by_range("", "", 1)─┐
│ 2                               │
│ regions: 5 4                    │
└─────────────────────────────────┘
=> DBGInvoke __drop_tidb_table(default, test)
=> drop table if exists default.test
