#RETURN

=> DBGInvoke __enable_schema_sync_service('true')

=> DBGInvoke __drop_tidb_table(default, test)
=> drop table if exists default.test

=> DBGInvoke __set_flush_threshold(100000, 20000000)

=> DBGInvoke __mock_tidb_table(default, test, 'col_1 String, col_2 Int64')
=> DBGInvoke __put_region(4, 0, 100, default, test)

=> DBGInvoke __raft_insert_row(default, test, 4, 50, 'test1', -1)
=> DBGInvoke __raft_insert_row(default, test, 4, 51, 'test2', -2)
=> DBGInvoke __raft_insert_row(default, test, 4, 52, 'test3', -3)
=> DBGInvoke __raft_insert_row(default, test, 4, 53, 'test3', -4)

=> DBGInvoke raft_insert_rows(default, test, 4, 30, 10, 1, 1)
┌─raft_insert_rows(default, test, 4, 30, 10, 1, 1)──┐
│ wrote 1200 row to default.test with raft commands │
└───────────────────────────────────────────────────┘

=> select count(*) from default.test " --schema_version "10000000
┌─count()─┐
│    1204 │
└─────────┘

=> selraw count(*) from default.test
┌─count()─┐
│    1204 │
└─────────┘

=> selraw nokvstore count(*) from default.test
┌─count()─┐
│       0 │
└─────────┘

=> DBGInvoke __raft_insert_row_full(default, test, 4, 1, 10000000, 0, 'f1', -5)
=> DBGInvoke __raft_insert_row_full(default, test, 4, 2, 10000002, 0, 'f2', -6)
=> select (*) from default.test " --read_tso "10000001
┌─col_1─┬─col_2─┬─_tidb_rowid─┐
│ f1    │    -5 │           1 │
└───────┴───────┴─────────────┘

=> select (*) from default.test " --read_tso "10000003
┌─col_1─┬─col_2─┬─_tidb_rowid─┐
│ f1    │    -5 │           1 │
│ f2    │    -6 │           2 │
└───────┴───────┴─────────────┘

=> DBGInvoke __raft_insert_row_full(default, test, 4, 2, 10000005, 1, 'f2', -6)
=> select (*) from default.test " --read_tso "10000003
┌─col_1─┬─col_2─┬─_tidb_rowid─┐
│ f1    │    -5 │           1 │
│ f2    │    -6 │           2 │
└───────┴───────┴─────────────┘

=> select (*) from default.test " --read_tso "10000005
┌─col_1─┬─col_2─┬─_tidb_rowid─┐
│ f1    │    -5 │           1 │
└───────┴───────┴─────────────┘

=> selraw count(*) from default.test
┌─count()─┐
│    1207 │
└─────────┘

=> select count(*) from default.test
┌─count()─┐
│    1205 │
└─────────┘

=> select count(col_1) from default.test
┌─count(col_1)─┐
│         1205 │
└──────────────┘

=> select count(col_2) from default.test
┌─count(col_2)─┐
│         1205 │
└──────────────┘

=> DBGInvoke __drop_tidb_table(default, test)
=> drop table if exists default.test
