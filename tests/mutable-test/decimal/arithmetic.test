>> drop table if exists test

>> create table test (i Int64, d1 decimal(1, 0), d2 decimal(2, 0)) engine = MutableMergeTree((i), 8192)

>> insert into test values (0, 9, 99), (1, -9, -99)

>> select d1 + d2 from test order by i
┌─plus(d1, d2)─┐
│ 108          │
│ -108         │
└──────────────┘

>> select d1 - d2 from test order by i
┌─minus(d1, d2)─┐
│ -90           │
│ 90            │
└───────────────┘

>> select d1 * d2 from test order by i
┌─multiply(d1, d2)─┐
│ 891              │
│ 891              │
└──────────────────┘

>> select d1 / d2 from test order by i
┌─divide(d1, d2)─┐
│ 0.0909         │
│ 0.0909         │
└────────────────┘

>> select d1 % d2 from test order by i
┌─modulo(d1, d2)─┐
│              9 │
│             -9 │
└────────────────┘

>> drop table if exists test

>> create table test (i Int64, d1 decimal(1, 1), d2 decimal(2, 2)) engine = MutableMergeTree((i), 8192)

>> insert into test values (0, 0.9, 0.99), (1, -0.9, -0.99)

>> select d1 + d2 from test order by i
┌─plus(d1, d2)─┐
│ 1.89         │
│ -1.89        │
└──────────────┘

>> select d1 - d2 from test order by i
┌─minus(d1, d2)─┐
│ -0.09         │
│ 0.09          │
└───────────────┘

>> select d1 * d2 from test order by i
┌─multiply(d1, d2)─┐
│ 0.891            │
│ 0.891            │
└──────────────────┘

>> select d1 / d2 from test order by i
┌─divide(d1, d2)─┐
│ 0.90909        │
│ 0.90909        │
└────────────────┘

>> drop table if exists test

>> create table test (i Int64, d1 decimal(65, 30), d2 decimal(65, 30)) engine = MutableMergeTree((i), 8192)

>> insert into test values (0, 0.012345678998765432100123456789, 0.012345678998765432100123456789), (1, 0.012345678998765432100123456780, 0.012345678998765432100123456789), (2, 0.0123456789987654321001234567885, 0.0123456789987654321001234567894), (3, 0.0123456789987654321001234567895, 0.0123456789987654321001234567894)

>> select d1 < d2, d1 <= d2, d1 = d2, d1 >= d2, d1 > d2 from test order by i
┌─less(d1, d2)─┬─lessOrEquals(d1, d2)─┬─equals(d1, d2)─┬─greaterOrEquals(d1, d2)─┬─greater(d1, d2)─┐
│            0 │                    1 │              1 │                       1 │               0 │
│            1 │                    1 │              0 │                       0 │               0 │
│            0 │                    1 │              1 │                       1 │               0 │
│            0 │                    0 │              0 │                       1 │               1 │
└──────────────┴──────────────────────┴────────────────┴─────────────────────────┴─────────────────┘

>> drop table if exists test

>> create table test (i Int64, d1 decimal(65, 10), d2 decimal(65, 20)) engine = MutableMergeTree((i), 8192)

>> insert into test values (0, 0.0123456789, 0.01234567890000000000), (1, 0.0123456789, 0.01234567890000000001), (2, 0.01234567894, 0.012345678899999999995), (3, 0.01234567894, 0.012345678899999999994)

>> select d1 < d2, d1 <= d2, d1 = d2, d1 >= d2, d1 > d2 from test order by i
┌─less(d1, d2)─┬─lessOrEquals(d1, d2)─┬─equals(d1, d2)─┬─greaterOrEquals(d1, d2)─┬─greater(d1, d2)─┐
│            0 │                    1 │              1 │                       1 │               0 │
│            1 │                    1 │              0 │                       0 │               0 │
│            0 │                    1 │              1 │                       1 │               0 │
│            0 │                    0 │              0 │                       1 │               1 │
└──────────────┴──────────────────────┴────────────────┴─────────────────────────┴─────────────────┘
