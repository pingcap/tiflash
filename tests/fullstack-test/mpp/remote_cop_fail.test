# Copyright 2023 PingCAP, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Preparation.
=> DBGInvoke __init_fail_point()

mysql> drop table if exists test.t
mysql> create table test.t (x int, a varchar(50), y int, t time) partition by range (x) (partition p0 values less than (5), partition p1 values less than (10));

mysql> insert into test.t values (1, 'a', 1, '700:11:11.1234'), (2, 'b', 2, '711:12:12.1234');
mysql> insert into test.t select * from test.t;
mysql> insert into test.t select * from test.t;
mysql> insert into test.t select * from test.t;
mysql> insert into test.t select * from test.t;
mysql> insert into test.t select * from test.t;
mysql> insert into test.t select * from test.t;
mysql> insert into test.t select * from test.t;
mysql> insert into test.t select * from test.t;
mysql> insert into test.t select * from test.t;
mysql> insert into test.t select * from test.t;
mysql> insert into test.t select * from test.t;
mysql> insert into test.t select * from test.t;
mysql> insert into test.t select * from test.t;
mysql> insert into test.t values (8, 'c', 8, '500:21:21.1234');

mysql> alter table test.t set tiflash replica 1;
func> wait_table test t
mysql> analyze table test.t;

=> DBGInvoke __enable_fail_point(force_remote_read_for_batch_cop)
=> DBGInvoke __enable_fail_point(cop_send_failure)

mysql> set tidb_enforce_mpp=1; select count(*) from test.t;
# ERROR 1105 (HY000) at line 1: other error for mpp stream: Code: 0, e.displayText() = DB::Exception: code: 10007
# msg: "Fail point FailPoints::cop_send_failure is triggered."
# , e.what() = DB::Exception,
{#REGEXP}.*
{#REGEXP}.*Fail point FailPoints::cop_send_failure is triggered.*
{#REGEXP}.*

=> DBGInvoke __disable_fail_point(force_remote_read_for_batch_cop)
=> DBGInvoke __disable_fail_point(cop_send_failure)

# Clean up.
mysql> drop table if exists test.t;
