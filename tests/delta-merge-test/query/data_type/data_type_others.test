# Copyright 2022 PingCAP, Ltd.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Preparation.
=> DBGInvoke __enable_schema_sync_service('true')

=> DBGInvoke __drop_tidb_table(default, test)
=> drop table if exists default.test

=> DBGInvoke __set_flush_threshold(1000000, 1000000)

# Data.
=> DBGInvoke __mock_tidb_table(default, test, 'col_1 String, col_2 Enum16(\'male\' = 1, \'female\' = 2, \'both\' = 3, \'unknown\' = 4)')
=> DBGInvoke __refresh_mapped_table_schema(default, test)
=> DBGInvoke __put_region(4, 0, 100, default, test)
=> DBGInvoke __raft_insert_row(default, test, 4, 50, 'data type test', 2)

# DAG read full table scan
=> DBGInvoke dag('select * from default.test') 
┌─col_1──────────┬─col_2──┐
│ data type test │ female │
└────────────────┴────────┘

=> DBGInvoke dag('select * from default.test', 4, 'encode_type:chunk') 
┌─col_1──────────┬─col_2──┐
│ data type test │ female │
└────────────────┴────────┘

# DAG read filter string column
=> DBGInvoke dag('select * from default.test where col_1 = \'data type test\'') 
┌─col_1──────────┬─col_2──┐
│ data type test │ female │
└────────────────┴────────┘

# DAG read filter enum column
=> DBGInvoke dag('select * from default.test where col_2 = \'female\'') 
┌─col_1──────────┬─col_2──┐
│ data type test │ female │
└────────────────┴────────┘

# DAG read filter enum column
=> DBGInvoke dag('select * from default.test where col_2 = 2') 
┌─col_1──────────┬─col_2──┐
│ data type test │ female │
└────────────────┴────────┘

# Clean up.
=> DBGInvoke __drop_tidb_table(default, test)
=> drop table if exists default.test
