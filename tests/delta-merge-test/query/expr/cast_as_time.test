# Preparation.
=> DBGInvoke __enable_schema_sync_service('true')

=> DBGInvoke __drop_tidb_table(default, test)
=> drop table if exists default.test

=> DBGInvoke __set_flush_threshold(1000000, 1000000)

# Data.
=> DBGInvoke __mock_tidb_table(default, test, 'a int, b double, c decimal(20, 6), d char, e MyDatetime')
=> DBGInvoke __refresh_schemas()
=> DBGInvoke __put_region(4, 0, 100, default, test)
=> DBGInvoke __raft_insert_row(default, test, 4, 50, 20201203, 20201203010000, 20201203010000, '2020-12-03 01:00:00', '2020-09-15 01:00:00')

=> DBGInvoke dag('select count(1), a, cast_int_datetime(a), cast_real_datetime(b), cast_decimal_datetime(c), cast_string_datetime(d), cast_time_datetime(e) from default.test group by a, cast_int_datetime(a), cast_real_datetime(b), cast_decimal_datetime(c), cast_string_datetime(d), cast_time_datetime(e)', 4,'encode_type:chunk')
┌─count(1)─┬────────a─┬─cast_int_datetime(a)─┬─cast_real_datetime(b)─┬─cast_decimal_datetime(c)─┬─cast_string_datetime(d)─┬─cast_time_datetime(e)─┐
│        1 │ 20201203 │  2020-12-03 00:00:00 │   2020-12-03 01:00:00 │      2020-12-03 01:00:00 │     2020-12-03 01:00:00 │   2020-09-15 01:00:00 │
└──────────┴──────────┴──────────────────────┴───────────────────────┴──────────────────────────┴─────────────────────────┴───────────────────────┘

=> DBGInvoke dag('select * from default.test where e = cast_string_datetime(\'2020-09-15 01:00:00\')', 4,'encode_type:chunk')
┌───test.a─┬─────────test.b─┬─test.c────────────────┬─test.d──────────────┬──────────────test.e─┐
│ 20201203 │ 20201203010000 │ 20201203010000.000000 │ 2020-12-03 01:00:00 │ 2020-09-15 01:00:00 │
└──────────┴────────────────┴───────────────────────┴─────────────────────┴─────────────────────┘

# TODO:
# => DBGInvoke dag('select count(1) from default.test group by a, cast_int_date(a), cast_real_date(b), cast_decimal_date(c), cast_string_date(d), cast_time_date(e)', 4,'encode_type:chunk')

# Clean up.
=> DBGInvoke __drop_tidb_table(default, test)
=> drop table if exists default.test
