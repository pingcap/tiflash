# Copyright 2022 PingCAP, Ltd.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Preparation.
=> DBGInvoke __enable_schema_sync_service('true')

=> DBGInvoke __drop_tidb_table(default, test1)
=> drop table if exists default.test1
=> DBGInvoke __drop_tidb_table(default, test2)
=> drop table if exists default.test2

=> DBGInvoke __set_flush_threshold(1000000, 1000000)

# Data.
=> DBGInvoke __mock_tidb_table(default, test1, 'col_1 default \'asTiDBType|Nullable(bit(1))\', col_2 default \'asTiDBType|timestamp(5)\'')
=> DBGInvoke __refresh_mapped_table_schema(default, test1)
=> DBGInvoke __put_region(4, 0, 100, default, test1)
=> DBGInvoke __put_region(5, 100, 200, default, test1)
=> DBGInvoke __put_region(6, 200, 300, default, test1)

=> DBGInvoke __mock_tidb_table(default, test2, 'col_1 default \'asTiDBType|Nullable(bit(1))\', col_2 default \'asTiDBType|timestamp(5)\'')
=> DBGInvoke __refresh_mapped_table_schema(default, test2)
=> DBGInvoke __put_region(7, 0, 100, default, test2)
=> DBGInvoke __put_region(8, 100, 200, default, test2)
=> DBGInvoke __put_region(9, 200, 300, default, test2)

=> DBGInvoke __raft_insert_row(default, test1, 4, 52, 1, '2020-01-01 00:00:00')
=> DBGInvoke __raft_insert_row(default, test1, 4, 53, 0, '2021-01-02 11:11:11.11111')
=> DBGInvoke __raft_insert_row(default, test1, 5, 152, 1, '2021-01-01 00:00:00')
=> DBGInvoke __raft_insert_row(default, test1, 5, 153, 0, '2021-01-02 11:11:11.11111')
=> DBGInvoke __raft_insert_row(default, test1, 6, 252, 1, '2020-01-01 00:00:00')
=> DBGInvoke __raft_insert_row(default, test1, 6, 253, 0, '2021-01-01 00:00:00')

=> DBGInvoke __raft_insert_row(default, test2, 7, 52, 1, '2021-01-01 00:00:00')
=> DBGInvoke __raft_insert_row(default, test2, 7, 53, 0, '2021-01-02 11:11:11.11111')
=> DBGInvoke __raft_insert_row(default, test2, 8, 152, 1, '2020-01-01 00:00:00')
=> DBGInvoke __raft_insert_row(default, test2, 8, 153, 1, '2021-01-01 00:00:00')
=> DBGInvoke __raft_insert_row(default, test2, 9, 252, 1, '2020-01-01 00:00:00')
=> DBGInvoke __raft_insert_row(default, test2, 9, 253, 0, '2020-01-02 11:11:11.11111')

# shuffle agg
=> DBGInvoke tidb_query('select col_1, col_2 from default.test1 group by col_1, col_2', 4,'mpp_query:true,mpp_partition_num:3,tz_offset:28800,encode_type:chunk')
┌─exchange_receiver_0─┬───────exchange_receiver_1─┐
│                   1 │ 2021-01-01 08:00:00.00000 │
│                   0 │ 2021-01-02 19:11:11.11111 │
│                   0 │ 2021-01-01 08:00:00.00000 │
│                   1 │ 2020-01-01 08:00:00.00000 │
└─────────────────────┴───────────────────────────┘

# shuffle join
=> DBGInvoke tidb_query('select * from default.test1 all inner join default.test2 using col_2', 4,'mpp_query:true,mpp_partition_num:3,tz_offset:28800,encode_type:chunk')
┌─exchange_receiver_0─┬───────exchange_receiver_1─┬─exchange_receiver_2─┬───────exchange_receiver_3─┐
│                   1 │ 2020-01-01 08:00:00.00000 │                   1 │ 2020-01-01 08:00:00.00000 │
│                   1 │ 2020-01-01 08:00:00.00000 │                   1 │ 2020-01-01 08:00:00.00000 │
│                   1 │ 2020-01-01 08:00:00.00000 │                   1 │ 2020-01-01 08:00:00.00000 │
│                   1 │ 2020-01-01 08:00:00.00000 │                   1 │ 2020-01-01 08:00:00.00000 │
│                   0 │ 2021-01-02 19:11:11.11111 │                   0 │ 2021-01-02 19:11:11.11111 │
│                   0 │ 2021-01-02 19:11:11.11111 │                   0 │ 2021-01-02 19:11:11.11111 │
│                   1 │ 2021-01-01 08:00:00.00000 │                   1 │ 2021-01-01 08:00:00.00000 │
│                   1 │ 2021-01-01 08:00:00.00000 │                   1 │ 2021-01-01 08:00:00.00000 │
│                   0 │ 2021-01-01 08:00:00.00000 │                   1 │ 2021-01-01 08:00:00.00000 │
│                   0 │ 2021-01-01 08:00:00.00000 │                   1 │ 2021-01-01 08:00:00.00000 │
└─────────────────────┴───────────────────────────┴─────────────────────┴───────────────────────────┘

# broadcast join
=> DBGInvoke tidb_query('select * from default.test1 all inner join default.test2 using col_2', 4,'mpp_query:true,mpp_partition_num:3,use_broadcast_join:true,tz_offset:28800,encode_type:chunk')
┌─exchange_receiver_0─┬───────exchange_receiver_1─┬─exchange_receiver_2─┬───────exchange_receiver_3─┐
│                   1 │ 2020-01-01 08:00:00.00000 │                   1 │ 2020-01-01 08:00:00.00000 │
│                   1 │ 2020-01-01 08:00:00.00000 │                   1 │ 2020-01-01 08:00:00.00000 │
│                   1 │ 2020-01-01 08:00:00.00000 │                   1 │ 2020-01-01 08:00:00.00000 │
│                   1 │ 2020-01-01 08:00:00.00000 │                   1 │ 2020-01-01 08:00:00.00000 │
│                   0 │ 2021-01-02 19:11:11.11111 │                   0 │ 2021-01-02 19:11:11.11111 │
│                   0 │ 2021-01-02 19:11:11.11111 │                   0 │ 2021-01-02 19:11:11.11111 │
│                   1 │ 2021-01-01 08:00:00.00000 │                   1 │ 2021-01-01 08:00:00.00000 │
│                   1 │ 2021-01-01 08:00:00.00000 │                   1 │ 2021-01-01 08:00:00.00000 │
│                   0 │ 2021-01-01 08:00:00.00000 │                   1 │ 2021-01-01 08:00:00.00000 │
│                   0 │ 2021-01-01 08:00:00.00000 │                   1 │ 2021-01-01 08:00:00.00000 │
└─────────────────────┴───────────────────────────┴─────────────────────┴───────────────────────────┘

# Clean up.
=> DBGInvoke __drop_tidb_table(default, test1)
=> drop table if exists default.test1
=> DBGInvoke __drop_tidb_table(default, test2)
=> drop table if exists default.test2