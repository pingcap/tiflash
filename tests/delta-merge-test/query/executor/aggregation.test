# Preparation.
=> DBGInvoke __enable_schema_sync_service('true')

=> DBGInvoke __drop_tidb_table(default, test)
=> drop table if exists default.test

=> DBGInvoke __set_flush_threshold(1000000, 1000000)

# Data.
=> DBGInvoke __mock_tidb_table(default, test, 'col_1 String, col_2 Int64')
=> DBGInvoke __refresh_schemas()
=> DBGInvoke __put_region(4, 0, 100, default, test)
=> DBGInvoke __raft_insert_row(default, test, 4, 50, 'test1', 666)
=> DBGInvoke __raft_insert_row(default, test, 4, 51, 'test2', 666)
=> DBGInvoke __raft_insert_row(default, test, 4, 52, 'test3', 777)

# DAG read by not specifying region id, group by.
=> DBGInvoke dag('select count(col_1), col_2 from default.test group by col_2')
┌─count(col_1)─┬─col_2─┐
│            2 │   666 │
│            1 │   777 │
└──────────────┴───────┘

=> DBGInvoke dag('select count(col_1),count(col_1),col_2 from default.test group by col_2')
┌─count(col_1)─┬─count(col_1)─┬─col_2─┐
│            2 │            2 │   666 │
│            1 │            1 │   777 │
└──────────────┴──────────────┴───────┘

# DAG read by explicitly specifying region id, where + group by.
=> DBGInvoke dag('select count(col_1),col_2 from default.test where col_2 = 666 group by col_2', 4)
┌─count(col_1)─┬─col_2─┐
│            2 │   666 │
└──────────────┴───────┘

# Clean up.
=> DBGInvoke __drop_tidb_table(default, test)
=> drop table if exists default.test
