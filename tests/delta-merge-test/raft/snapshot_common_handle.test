# Copyright 2022 PingCAP, Ltd.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

=> DBGInvoke __enable_schema_sync_service('false')

## clean up
=> DBGInvoke __drop_tidb_table(default, test_dm)
=> DBGInvoke __refresh_schemas()

## create table and apply an empty snapshot
=> DBGInvoke __mock_tidb_table(default, test_dm, 'col_1 String, col_2 Int64, col_3 Int64', 'col_1,col_2', 'dt')
=> DBGInvoke __refresh_mapped_table_schema(default, test_dm)
=> DBGInvoke query_mapped('select tidb_database,tidb_name,engine from system.tables where database=''\$d'' and name=''\$t''', default, test_dm)
┌─database─┬─name────┬─engine─────┐
│ default  │ test_dm │ DeltaMerge │
└──────────┴─────────┴────────────┘

=> DBGInvoke __region_snapshot(4, 'test0', 0, 'test1000', 1000, default, test_dm)
## insert some rows
## raft_insert_row_full(db_name, tbl_name, region_id, handle_id, tso, del, val1, val2, ...)
=> DBGInvoke __raft_insert_row_full(default, test_dm, 4,   '', 1, 0, 'test2', 2, 10)
=> DBGInvoke __raft_insert_row_full(default, test_dm, 4,   '', 3, 0, 'test2', 2, 11)
=> DBGInvoke __raft_insert_row_full(default, test_dm, 4,   '', 2, 0, 'test1', 1, 12)
=> DBGInvoke __raft_insert_row_full(default, test_dm, 4,   '', 1, 0, 'test3', 3, 14)
=> DBGInvoke __raft_insert_row_full(default, test_dm, 4,   '', 4, 0, 'test3', 3, 15)
=> DBGInvoke __raft_insert_row_full(default, test_dm, 4,   '', 4, 1, 'test4', 4, 0) -- this row is mark deleted
=> DBGInvoke __try_flush_region(4)

=> DBGInvoke query_mapped('select col_1, col_2, col_3 from \$d.\$t order by _tidb_rowid', default, test_dm)
┌─col_1─┬─col_2─┬─col_3─┐
│ test1 │     1 │    12 │
│ test2 │     2 │    11 │
│ test3 │     3 │    15 │
└───────┴───────┴───────┘

## apply another snapshot, old data should be clear
## region_snapshot_data(database_name, table_name,
##                      region_id, start, end,
##                      handle_id1, tso1, del1, r1_c1, r1_c2, ...,
##                      handle_id2, tso2, del2, r2_c1, r2_c2, ... )
=> DBGInvoke __region_snapshot_data(
    default, test_dm,
    4, 'test0', 0, 'test1000', 1000,
    '', 3, 0, 'test2', 2, 11,
    '', 3, 0, 'test1', 1, 13,
    '', 4, 1, 'test4', 4, 0
    )
=> DBGInvoke __try_flush_region(4)
## now we should not find rowid==3
=> DBGInvoke query_mapped('select col_1, col_2, col_3 from \$d.\$t', default, test_dm)
┌─col_1─┬─col_2─┬─col_3─┐
│ test1 │     1 │    13 │
│ test2 │     2 │    11 │
└───────┴───────┴───────┘

## clean up
=> DBGInvoke __drop_tidb_table(default, test_dm)
=> DBGInvoke __refresh_schemas()

