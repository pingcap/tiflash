# Copyright 2022 PingCAP, Ltd.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

=> DBGInvoke __enable_schema_sync_service('true')

=> DBGInvoke __drop_tidb_table(default, test)
=> DBGInvoke __refresh_schemas()

=> DBGInvoke __mock_tidb_table(default, test, 'col_1 Int64', '', 'dt')

=> DBGInvoke __region_snapshot(4, 0, 100, default, test)

# raft_insert_row_full(database_name, table_name, region_id, handle_id, tso, del, val1, val2, ...)
=> DBGInvoke __raft_insert_row_full(default, test, 4, 2, 1, 0, 10)
=> DBGInvoke __raft_insert_row_full(default, test, 4, 1, 1, 0, 12)
=> DBGInvoke __raft_insert_row_full(default, test, 4, 3, 1, 0, 14)
=> DBGInvoke __raft_insert_row_full(default, test, 4, 4, 4, 1, 0)
=> DBGInvoke __raft_insert_row_full(default, test, 4, 4, 3, 0, 15)
=> DBGInvoke __raft_insert_row_full(default, test, 4, 5, 1, 0, 16)
=> DBGInvoke query_mapped('select * from \$d.\$t', default, test)
┌─col_1─┬─_tidb_rowid─┐
│    12 │           1 │
│    10 │           2 │
│    14 │           3 │
│    16 │           5 │
└───────┴─────────────┘

=> DBGInvoke query_mapped('selraw *,_INTERNAL_VERSION, _INTERNAL_DELMARK from \$d.\$t order by _tidb_rowid, _INTERNAL_VERSION, _INTERNAL_DELMARK', default, test)
┌─col_1─┬─_tidb_rowid─┬─_INTERNAL_VERSION─┬─_INTERNAL_DELMARK─┐
│    12 │           1 │                 1 │                 0 │
│    10 │           2 │                 1 │                 0 │
│    14 │           3 │                 1 │                 0 │
│    15 │           4 │                 3 │                 0 │
│     0 │           4 │                 4 │                 1 │
│    16 │           5 │                 1 │                 0 │
└───────┴─────────────┴───────────────────┴───────────────────┘
=> DBGInvoke dump_all_mock_region(default, test)
┌─dump_all_mock_region(default, test)────────┐
│ [region 4] ranges: [0, 100), state: Normal │
│ total size: 1                              │
└────────────────────────────────────────────┘
=> DBGInvoke region_split(4, default, test, 0, 4, 4, 100, 5)
┌─region_split(4, default, test, 0, 4, 4, 100, 5)─┐
│ execute batch split, region 4 into (4,5)        │
└─────────────────────────────────────────────────┘
=> DBGInvoke __raft_insert_row_full(default, test, 5, 10, 1, 0, 17)
=> DBGInvoke __raft_insert_row_full(default, test, 5, 11, 1, 0, 18)
=> DBGInvoke __raft_insert_row_full(default, test, 5, 10, 3, 0, 19)
=> DBGInvoke query_mapped('select * from \$d.\$t', default, test)
┌─col_1─┬─_tidb_rowid─┐
│    12 │           1 │
│    10 │           2 │
│    14 │           3 │
│    16 │           5 │
│    19 │          10 │
│    18 │          11 │
└───────┴─────────────┘

=> DBGInvoke query_mapped('selraw *,_INTERNAL_VERSION, _INTERNAL_DELMARK from \$d.\$t order by _tidb_rowid, _INTERNAL_VERSION, _INTERNAL_DELMARK', default, test)
┌─col_1─┬─_tidb_rowid─┬─_INTERNAL_VERSION─┬─_INTERNAL_DELMARK─┐
│    12 │           1 │                 1 │                 0 │
│    10 │           2 │                 1 │                 0 │
│    14 │           3 │                 1 │                 0 │
│    15 │           4 │                 3 │                 0 │
│     0 │           4 │                 4 │                 1 │
│    16 │           5 │                 1 │                 0 │
│    17 │          10 │                 1 │                 0 │
│    19 │          10 │                 3 │                 0 │
│    18 │          11 │                 1 │                 0 │
└───────┴─────────────┴───────────────────┴───────────────────┘
=> DBGInvoke dump_all_mock_region(default, test)
┌─dump_all_mock_region(default, test)────────┐
│ [region 5] ranges: [4, 100), state: Normal │
│ [region 4] ranges: [0, 4), state: Normal   │
│ total size: 2                              │
└────────────────────────────────────────────┘
=> DBGInvoke region_prepare_merge(4, 5);
┌─region_prepare_merge(4, 5)───────────────┐
│ execute prepare merge, source 4 target 5 │
└──────────────────────────────────────────┘
=> DBGInvoke dump_all_mock_region(default, test)
┌─dump_all_mock_region(default, test)────────┐
│ [region 5] ranges: [4, 100), state: Normal │
│ [region 4] ranges: [0, 4), state: Merging  │
│ total size: 2                              │
└────────────────────────────────────────────┘
=> DBGInvoke region_commit_merge(4, 5);
┌─region_commit_merge(4, 5)────────────────┐
│ execute commit merge, source 4 current 5 │
└──────────────────────────────────────────┘
=> DBGInvoke dump_all_mock_region(default, test)
┌─dump_all_mock_region(default, test)────────┐
│ [region 5] ranges: [0, 100), state: Normal │
│ total size: 1                              │
└────────────────────────────────────────────┘
=> DBGInvoke __try_flush_region(5)
=> DBGInvoke dump_all_mock_region(default, test)
┌─dump_all_mock_region(default, test)────────┐
│ [region 5] ranges: [0, 100), state: Normal │
│ total size: 1                              │
└────────────────────────────────────────────┘

=> DBGInvoke query_mapped('select _tidb_rowid, col_1 from \$d.\$t order by _tidb_rowid', default, test)
┌─_tidb_rowid─┬─col_1─┐
│           1 │    12 │
│           2 │    10 │
│           3 │    14 │
│           5 │    16 │
│          10 │    19 │
│          11 │    18 │
└─────────────┴───────┘
=> DBGInvoke __drop_tidb_table(default, test)
=> DBGInvoke __refresh_schemas()
