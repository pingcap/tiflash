# Disable background schema sync to test schema sync triggled by applying snapshot
=> DBGInvoke __enable_schema_sync_service('false')
=> DBGInvoke __drop_tidb_table(default, test)
=> drop table if exists default.test

=> DBGInvoke __mock_tidb_table(default, test, 'col_1 Int64', '', 'dt')
=> DBGInvoke __region_snapshot(4, 0, 10000, default, test)
=> DBGInvoke __refresh_schemas()

#####
## Pre-handle region to dt files then apply
=> DBGInvoke region_snapshot_pre_handle_file(default, test, 4, 3, 6, 'col_1 Int64', '')
┌─region_snapshot_pre_handle_file(default, test, 4, 3, 6)────────┐
│ Generate 1 files for [region_id=4]                             │
└────────────────────────────────────────────────────────────────┘
=> DBGInvoke __region_snapshot_pre_handle_file(4)
=> select * from default.test
┌─col_1─┬─_tidb_rowid─┐
│    -3 │           3 │
│    -4 │           4 │
│    -5 │           5 │
└───────┴─────────────┘

####
## Mock to test idempotence of applying snapshot
=> DBGInvoke region_snapshot_pre_handle_file(default, test, 4, 3, 6, 'col_1 Int64', '')
┌─region_snapshot_pre_handle_file(default, test, 4, 3, 6)────────┐
│ Generate 1 files for [region_id=4]                             │
└────────────────────────────────────────────────────────────────┘
## Mock that we crashed before applying first snapshot, then replay the process of apply snapshot
=> DBGInvoke region_snapshot_pre_handle_file(default, test, 4, 3, 6, 'col_1 Int64', '')
┌─region_snapshot_pre_handle_file(default, test, 4, 3, 6)────────┐
│ Generate 1 files for [region_id=4]                             │
└────────────────────────────────────────────────────────────────┘
=> DBGInvoke __region_snapshot_pre_handle_file(4)
=> select * from default.test
┌─col_1─┬─_tidb_rowid─┐
│    -3 │           3 │
│    -4 │           4 │
│    -5 │           5 │
└───────┴─────────────┘

#####
### Mock to test apply snapshot with multiple schema
=> DBGInvoke __add_column_to_tidb_table(default, test, 'col_2 String')
=> DBGInvoke __add_column_to_tidb_table(default, test, 'col_3 UInt64')
=> DBGInvoke region_snapshot_pre_handle_file(default, test, 4, 3, 12, 'col_1 Int64, col_2 String, col_3 UInt64', '', 3)
┌─region_snapshot_pre_handle_file(default, test, 4, 3, 12)─┐
│ Generate 2 files for [region_id=4]                              │
└─────────────────────────────────────────────────────────────────┘
=> DBGInvoke region_snapshot_pre_handle_file(4)
┌─region_snapshot_pre_handle_file(4)─┐
│ success apply region 4 with dt files │
└──────────────────────────────────────┘
=> select * from default.test
┌─col_1─┬─_tidb_rowid─┬─col_2─┬─col_3─┐
│    -3 │           3 │       │     0 │
│    -4 │           4 │       │     0 │
│    -5 │           5 │       │     0 │
│    -6 │           6 │ _6    │     0 │
│    -7 │           7 │ _7    │     0 │
│    -8 │           8 │ _8    │     0 │
│    -9 │           9 │ _9    │     4 │
│   -10 │          10 │ _10   │     5 │
│   -11 │          11 │ _11   │     5 │
└───────┴─────────────┴───────┴───────┘

#####
## Recreate test table
=> DBGInvoke __drop_tidb_table(default, test)
=> drop table if exists default.test
=> DBGInvoke __mock_tidb_table(default, test, 'col_1 Int64', '', 'dt')
=> DBGInvoke __region_snapshot(4, 0, 10000, default, test)
=> DBGInvoke __refresh_schemas()
## Mock to test apply snapshot with an older schema
=> DBGInvoke __add_column_to_tidb_table(default, test, 'col_2 String')
=> DBGInvoke __add_column_to_tidb_table(default, test, 'col_3 UInt64')
=> DBGInvoke region_snapshot_pre_handle_file(default, test, 4, 3, 12, 'col_1 Int64, col_2 String, col_3 UInt64', '', 3)
┌─region_snapshot_pre_handle_file(default, test, 4, 3, 6)─┐
│ Generate 2 files for [region_id=4]                             │
└────────────────────────────────────────────────────────────────┘
=> DBGInvoke __add_column_to_tidb_table(default, test, 'col_4 Nullable(UInt64)')
=> DBGInvoke __add_column_to_tidb_table(default, test, 'col_5 Nullable(String)')
=> DBGInvoke __refresh_schemas()
=> DBGInvoke region_snapshot_pre_handle_file(4)
┌─region_snapshot_pre_handle_file(4)─┐
│ success apply region 4 with dt files │
└──────────────────────────────────────┘
=> select * from default.test
┌─col_1─┬─_tidb_rowid─┬─col_2─┬─col_3─┬─col_4─┬─col_5─┐
│    -3 │           3 │       │     0 │    \N │ \N    │
│    -4 │           4 │       │     0 │    \N │ \N    │
│    -5 │           5 │       │     0 │    \N │ \N    │
│    -6 │           6 │ _6    │     0 │    \N │ \N    │
│    -7 │           7 │ _7    │     0 │    \N │ \N    │
│    -8 │           8 │ _8    │     0 │    \N │ \N    │
│    -9 │           9 │ _9    │     4 │    \N │ \N    │
│   -10 │          10 │ _10   │     5 │    \N │ \N    │
│   -11 │          11 │ _11   │     5 │    \N │ \N    │
└───────┴─────────────┴───────┴───────┴───────┴───────┘

=> DBGInvoke __drop_tidb_table(default, test)
=> drop table if exists default.test
=> DBGInvoke __enable_schema_sync_service('true')
