# Copyright 2022 PingCAP, Ltd.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

## disable schema sync and automatic flush
=> DBGInvoke __enable_schema_sync_service('false')
=> DBGInvoke __set_flush_threshold(1000000, 1000000)

## clean up
=> DBGInvoke __drop_tidb_table(default, test)
=> DBGInvoke __refresh_schemas()

## create a DeltaMerge table
=> DBGInvoke __mock_tidb_table(default, test, 'col_1 String, col_2 Int64, col_3 Int64', 'col_1,col_2', 'dt')
=> DBGInvoke __refresh_mapped_table_schema(default, test)

=> DBGInvoke __put_region(4, 'test0',0,'test100', 100, default, test)

## insert some data
=> DBGInvoke __raft_insert_row(default, test, 4, '', 'test51',51,151)
=> DBGInvoke __try_flush_region(4)

=> DBGInvoke query_mapped('select tidb_database,tidb_name,engine from system.tables where database=''\$d'' and name=''\$t''', default, test)
┌─database─┬─name─┬─engine─────┐
│ default  │ test │ DeltaMerge │
└──────────┴──────┴────────────┘

=> DBGInvoke query_mapped('select col_1 from \$d.\$t where col_3 = 151', default, test)
┌─col_1──┐
│ test51 │
└────────┘

## insert more data
=> DBGInvoke __raft_insert_row(default, test, 4, '', 'test52', 52, 152)
=> DBGInvoke __raft_insert_row(default, test, 4, '', 'test19', 19, 119)
=> DBGInvoke __try_flush_region(4)

=> DBGInvoke query_mapped('select col_1,col_2,col_3 from \$d.\$t order by _tidb_rowid', default, test)
┌─col_1──┬─col_2─┬─col_3─┐
│ test19 │    19 │   119 │
│ test51 │    51 │   151 │
│ test52 │    52 │   152 │
└────────┴───────┴───────┘

## update data
=> DBGInvoke __raft_insert_row(default, test, 4, '', 'test52', 52, 252)
=> DBGInvoke __try_flush_region(4)
=> DBGInvoke query_mapped('select col_1,col_2,col_3 from \$d.\$t order by _tidb_rowid', default, test)
┌─col_1──┬─col_2─┬─col_3─┐
│ test19 │    19 │   119 │
│ test51 │    51 │   151 │
│ test52 │    52 │   252 │
└────────┴───────┴───────┘


## clean up
=> DBGInvoke __drop_tidb_table(default, test)
=> DBGInvoke __refresh_schemas()
