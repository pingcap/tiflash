# Copyright 2022 PingCAP, Ltd.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# Preparation.
=> DBGInvoke __enable_schema_sync_service('false')

=> DBGInvoke __drop_tidb_table(default, test)
=> drop table if exists default.test
=> DBGInvoke __refresh_schemas()

=> DBGInvoke __set_flush_threshold(1000000, 1000000)

# Sync add column by reading.
=> DBGInvoke __mock_tidb_table(default, test, 'col_1 String, col_2 Int8, col_3 Int32', '', 'dt')
=> DBGInvoke __refresh_mapped_table_schema(default, test)
=> DBGInvoke __put_region(4, 0, 100, default, test)
=> DBGInvoke __raft_insert_row(default, test, 4, 50, 'test', 1, 3)
=> DBGInvoke __raft_insert_row(default, test, 4, 51, 'test', 2, 4)
=> DBGInvoke __try_flush_region(4)

# test add nullable flag and change type at the same time.
=> DBGInvoke __modify_column_in_tidb_table(default, test, 'col_2 Nullable(Int32)')
# test trigger by background worker.
=> DBGInvoke __refresh_mapped_table_schema(default, test)

>> DBGInvoke query_mapped('select col_2 from \$d.\$t', default, test)
┌─col_2─┐
│     1 │
│     2 │
└───────┘

# test only add nullable.
=> DBGInvoke __modify_column_in_tidb_table(default, test, 'col_3 Nullable(Int32)')

=> DBGInvoke __put_region(5, 100, 150, default, test)
=> DBGInvoke __raft_insert_row(default, test, 5, 100, 'test', 1, NULL)
=> DBGInvoke __raft_insert_row(default, test, 5, 101, 'test', 2, NULL)
# test trigger by flush worker.
=> DBGInvoke __try_flush_region(5)

>> DBGInvoke query_mapped('select col_3 from \$d.\$t', default, test)
┌─col_2─┐
│     3 │
│     4 │
│    \N │
│    \N │
└───────┘

=> DBGInvoke __drop_tidb_table(default, test)

# Test convert nullable type to not-null type.
=> DBGInvoke __mock_tidb_table(default, test, 'col_1 String, col_2 Nullable(Int8)', '', 'dt')
=> DBGInvoke __put_region(4, 0, 100, default, test)
=> DBGInvoke __raft_insert_row(default, test, 4, 50, 'test', 1)
=> DBGInvoke __raft_insert_row(default, test, 4, 51, 'test', 2)
=> DBGInvoke __try_flush_region(4)
>> DBGInvoke query_mapped('select col_2 from \$d.\$t', default, test)
┌─col_2─┐
│     1 │
│     2 │
└───────┘
=> DBGInvoke __modify_column_in_tidb_table(default, test, 'col_2 Int16')
=> DBGInvoke __refresh_mapped_table_schema(default, test)
>> DBGInvoke query_mapped('select col_2 from \$d.\$t', default, test)
┌─col_2─┐
│     1 │
│     2 │
└───────┘

=> DBGInvoke __drop_tidb_table(default, test)
=> DBGInvoke __refresh_schemas()
