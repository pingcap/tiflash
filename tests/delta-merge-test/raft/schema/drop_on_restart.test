=> DBGInvoke __clean_up_region()
=> DBGInvoke __enable_schema_sync_service('false')

=> DBGInvoke __drop_tidb_table(default, test)
=> DBGInvoke __drop_tidb_db(db3)
=> DBGInvoke __drop_tidb_db(db4)
=> DBGInvoke __refresh_schemas()
=> drop table if exists default.test
=> drop database if exists db3
=> drop database if exists db4

=> DBGInvoke __set_flush_threshold(1000000, 1000000)

=> DBGInvoke __mock_tidb_db(db3)
=> DBGInvoke __mock_tidb_db(db4)
=> DBGInvoke __mock_tidb_table(db3, test, 'col_1 String', '', 'dt')
=> DBGInvoke __mock_tidb_table(db4, test, 'col_1 String', '', 'dt')
=> DBGInvoke __refresh_schemas()
=> show databases
┌─name────┐
│ db3     │
│ db4     │
│ db_1    │
│ default │
│ system  │
└─────────┘
=> DBGInvoke __reset_schemas()
=> DBGInvoke __drop_tidb_db(db3);
=> DBGInvoke __drop_tidb_table(db4, test);
=> DBGInvoke __refresh_schemas()
=> show databases
┌─name────┐
│ db4     │
│ db_1    │
│ default │
│ system  │
└─────────┘
=> DBGInvoke is_tombstone(db4, test)
┌─is_tombstone(db4, test)─┐
│ true                    │
└─────────────────────────┘
=> DBGInvoke __mock_tidb_db(db3)
=> DBGInvoke __refresh_schemas()
=> show databases
┌─name────┐
│ db3     │
│ db4     │
│ db_1    │
│ default │
│ system  │
└─────────┘
=> DBGInvoke __reset_schemas()
=> DBGInvoke __drop_tidb_db(db3);
=> DBGInvoke __drop_tidb_db(db4);
=> DBGInvoke __refresh_schemas()
=> show databases
┌─name────┐
│ db_1    │
│ default │
│ system  │
└─────────┘
