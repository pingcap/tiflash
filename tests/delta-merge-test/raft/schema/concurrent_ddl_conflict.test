# Copyright 2023 PingCAP, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Preparation.
=> DBGInvoke __enable_schema_sync_service('false')

=> DBGInvoke __drop_tidb_table(default, test)

=> DBGInvoke __mock_tidb_table(default, test, 'col_1 String', '', 'dt')
=> DBGInvoke __refresh_mapped_table_schema(default, test)
=> DBGInvoke __put_region(4, 0, 100, default, test)
=> DBGInvoke __skip_schema_version()
=> DBGInvoke __add_column_to_tidb_table(default, test, 'col_2 Nullable(Int8)')
=> DBGInvoke __add_column_to_tidb_table(default, test, 'col_3 Nullable(Int32)')
=> DBGInvoke __refresh_schemas()
=> DBGInvoke __raft_insert_row(default, test, 4, 50, 'test1', 1, 65536)

# Sync add column by reading.
>> DBGInvoke query_mapped('select col_1,col_2,col_3 from \$d.\$t', default, test)
┌─col_1─┬─col_2─┬─col_3─┐
│ test1 │     1 │ 65536 │
└───────┴───────┴───────┘

# Meet SchemaDiff with regenerate_schema_map
=> DBGInvoke __regenerate_schema_map()
# Try gc tombstone storages
=> DBGInvoke __refresh_schemas()
>> DBGInvoke __enable_schema_sync_service('true')
>> DBGInvoke __gc_schemas(18446744073709551615, 'true')
# Check the storage is not dropped
>> DBGInvoke query_mapped('select col_1,col_2,col_3 from \$d.\$t', default, test)
┌─col_1─┬─col_2─┬─col_3─┐
│ test1 │     1 │ 65536 │
└───────┴───────┴───────┘

# Clean up.
=> DBGInvoke __drop_tidb_table(default, test)
=> DBGInvoke __refresh_schemas()
=> DBGInvoke __enable_schema_sync_service('true')

