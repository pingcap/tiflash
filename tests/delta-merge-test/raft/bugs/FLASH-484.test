## disable schema sync and automatic flush
=> DBGInvoke __enable_schema_sync_service('false')
=> DBGInvoke __set_flush_threshold(1000000, 1000000)

## clean up
=> DBGInvoke __drop_tidb_table(default, test)
=> drop table if exists default.test


## create a DeltaMerge table
=> DBGInvoke __mock_tidb_table(default, test, 'col_1 String', '', 'dt')
=> DBGInvoke __refresh_schemas()

=> DBGInvoke __put_region(4, 0, 100, default, test)

## insert data and get exception, then rowid==51 is not flush to Storage
=> DBGInvoke __enable_fail_point(exception_during_write_to_storage)
=> DBGInvoke __raft_insert_row(default, test, 4, 51, 'test51')
Received exception from server (version {#WORD}):
Code: {#WORD} DB::Exception: Received from {#WORD} DB::Exception: Fail point FailPoints::exception_during_write_to_storage is triggered..
=> select count(*) from default.test
┌─count()─┐
│       0 │
└─────────┘


## insert more data, and this time we get all 3 rows(including rowid==51) flush to Storage
=> DBGInvoke __raft_insert_row(default, test, 4, 52, 'test52')
=> DBGInvoke __raft_insert_row(default, test, 4, 19, 'test19')
=> select * from default.test order by _tidb_rowid
┌─col_1──┬─_tidb_rowid─┐
│ test19 │          19 │
│ test51 │          51 │
│ test52 │          52 │
└────────┴─────────────┘


## clean up
=> DBGInvoke __drop_tidb_table(default, test)
=> drop table if exists default.test
