# Copyright 2023 PingCAP, Ltd.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


## partition_table --> partition_table

mysql> drop table if exists test.t;
mysql> create table test.t (a int primary key, b varchar(255), c int, key (b), key (c,b)) partition by range (a) (partition p0 values less than (1000000), partition p1M values less than (2000000));
mysql> analyze table test.t;
mysql> alter table test.t set tiflash replica 1;

mysql> insert into test.t values (1,"1",-1);
mysql> insert into test.t select a+1,a+1,-(a+1) from test.t;
mysql> insert into test.t select a+2,a+2,-(a+2) from test.t;
mysql> insert into test.t select a+500000,a+500000,-(a+500000) from test.t;
mysql> insert into test.t select a+1000000,a+1000000,-(a+1000000) from test.t;

func> wait_table test t

# check table info in tiflash
>> select tidb_database,tidb_name from system.tables where tidb_database = 'test' and tidb_name = 't' and is_tombstone = 0
┌─tidb_database─┬─tidb_name─┐
│ test          │ t         │
└───────────────┴───────────┘

mysql> select /*+ READ_FROM_STORAGE(TIKV[t]) */ count(*) from test.t partition (p0);
+----------+
| count(*) |
+----------+
|        8 |
+----------+

mysql> show warnings;
mysql> select /*+ READ_FROM_STORAGE(TIFLASH[t]) */ count(*) from test.t partition (p0);
+----------+
| count(*) |
+----------+
|        8 |
+----------+

mysql> show warnings;
mysql> select /*+ READ_FROM_STORAGE(TIKV[t]) */ count(*) from test.t partition (p1M);
+----------+
| count(*) |
+----------+
|        8 |
+----------+

mysql> select /*+ READ_FROM_STORAGE(TIFLASH[t]) */ count(*) from test.t partition (p1M);
+----------+
| count(*) |
+----------+
|        8 |
+----------+

mysql> show warnings;

mysql> alter table test.t reorganize partition p0 INTO (partition p0 values less than (500000), partition p500k values less than (1000000));

mysql> select /*+ READ_FROM_STORAGE(TIFLASH[t]) */ count(*) from test.t partition (p0);
+----------+
| count(*) |
+----------+
|        4 |
+----------+

mysql> show warnings;

mysql> select /*+ READ_FROM_STORAGE(TIFLASH[t]) */ count(*) from test.t partition (p500k);
+----------+
| count(*) |
+----------+
|        4 |
+----------+

mysql> show warnings;

mysql> select /*+ READ_FROM_STORAGE(TIKV[t]) */ count(*) from test.t partition (p0);
+----------+
| count(*) |
+----------+
|        4 |
+----------+

mysql> select /*+ READ_FROM_STORAGE(TIKV[t]) */ count(*) from test.t partition (p500k);
+----------+
| count(*) |
+----------+
|        4 |
+----------+

mysql> show warnings;

mysql> select /*+ READ_FROM_STORAGE(TIKV[t]) */ count(*) from test.t partition (p1M);
+----------+
| count(*) |
+----------+
|        8 |
+----------+

mysql> select /*+ READ_FROM_STORAGE(TIFLASH[t]) */ count(*) from test.t partition (p1M);
+----------+
| count(*) |
+----------+
|        8 |
+----------+

mysql> drop table test.t;


# do ddl and insert before action reorganize partition

mysql> drop table if exists test.t1
mysql> create table test.t1(id INT NOT NULL,name VARCHAR(30)) PARTITION BY RANGE (id) ( PARTITION p0 VALUES LESS THAN (50),PARTITION p1 VALUES LESS THAN (100));
mysql> alter table test.t1 set tiflash replica 1;

mysql> insert into test.t1 values (1, 'abc');
mysql> insert into test.t1 values (60, 'cba');

func> wait_table test t1

=> DBGInvoke __enable_schema_sync_service('false') 
=> DBGInvoke __init_fail_point()

mysql> alter table test.t1 add column c int;

>> DBGInvoke __enable_fail_point(pause_before_apply_raft_cmd)

# exactly write until fail point "pause_before_apply_raft_cmd" to be disable
mysql> insert into test.t1 values(80, 'aaa', 2);

mysql> alter table test.t1 reorganize partition p1 INTO (partition p1 values less than (70), partition p2 values less than (100));

=> DBGInvoke __refresh_schemas()

# make write cmd take effect
>> DBGInvoke __disable_fail_point(pause_before_apply_raft_cmd)

mysql> select /*+ READ_FROM_STORAGE(TIFLASH[test.t1]) */ * from test.t1 partition (p1);
+----+------+----+
| id | name |  c |
+----+------+----+
| 60 | cba  |NULL|
+----+------+----+

mysql> select /*+ READ_FROM_STORAGE(TIFLASH[test.t1]) */ * from test.t1 partition (p2);
+----+------+----+
| id | name |  c |
+----+------+----+
| 80 | aaa  | 2  |
+----+------+----+

mysql> drop table test.t1;
