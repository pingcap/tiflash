// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dmfile.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_dmfile_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_dmfile_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3016000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3016000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_dmfile_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_dmfile_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_dmfile_2eproto;
namespace dtpb {
class PackProperties;
struct PackPropertiesDefaultTypeInternal;
extern PackPropertiesDefaultTypeInternal _PackProperties_default_instance_;
class PackProperty;
struct PackPropertyDefaultTypeInternal;
extern PackPropertyDefaultTypeInternal _PackProperty_default_instance_;
}  // namespace dtpb
PROTOBUF_NAMESPACE_OPEN
template<> ::dtpb::PackProperties* Arena::CreateMaybeMessage<::dtpb::PackProperties>(Arena*);
template<> ::dtpb::PackProperty* Arena::CreateMaybeMessage<::dtpb::PackProperty>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace dtpb {

// ===================================================================

class PackProperty PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dtpb.PackProperty) */ {
 public:
  inline PackProperty() : PackProperty(nullptr) {}
  ~PackProperty() override;
  explicit constexpr PackProperty(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PackProperty(const PackProperty& from);
  PackProperty(PackProperty&& from) noexcept
    : PackProperty() {
    *this = ::std::move(from);
  }

  inline PackProperty& operator=(const PackProperty& from) {
    CopyFrom(from);
    return *this;
  }
  inline PackProperty& operator=(PackProperty&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PackProperty& default_instance() {
    return *internal_default_instance();
  }
  static inline const PackProperty* internal_default_instance() {
    return reinterpret_cast<const PackProperty*>(
               &_PackProperty_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(PackProperty& a, PackProperty& b) {
    a.Swap(&b);
  }
  inline void Swap(PackProperty* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PackProperty* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PackProperty* New() const final {
    return CreateMaybeMessage<PackProperty>(nullptr);
  }

  PackProperty* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PackProperty>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PackProperty& from);
  void MergeFrom(const PackProperty& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PackProperty* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dtpb.PackProperty";
  }
  protected:
  explicit PackProperty(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGcHintVersionFieldNumber = 1,
    kNumRowsFieldNumber = 2,
  };
  // required uint64 gc_hint_version = 1;
  bool has_gc_hint_version() const;
  private:
  bool _internal_has_gc_hint_version() const;
  public:
  void clear_gc_hint_version();
  ::PROTOBUF_NAMESPACE_ID::uint64 gc_hint_version() const;
  void set_gc_hint_version(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_gc_hint_version() const;
  void _internal_set_gc_hint_version(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // required uint64 num_rows = 2;
  bool has_num_rows() const;
  private:
  bool _internal_has_num_rows() const;
  public:
  void clear_num_rows();
  ::PROTOBUF_NAMESPACE_ID::uint64 num_rows() const;
  void set_num_rows(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_num_rows() const;
  void _internal_set_num_rows(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:dtpb.PackProperty)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 gc_hint_version_;
  ::PROTOBUF_NAMESPACE_ID::uint64 num_rows_;
  friend struct ::TableStruct_dmfile_2eproto;
};
// -------------------------------------------------------------------

class PackProperties PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dtpb.PackProperties) */ {
 public:
  inline PackProperties() : PackProperties(nullptr) {}
  ~PackProperties() override;
  explicit constexpr PackProperties(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PackProperties(const PackProperties& from);
  PackProperties(PackProperties&& from) noexcept
    : PackProperties() {
    *this = ::std::move(from);
  }

  inline PackProperties& operator=(const PackProperties& from) {
    CopyFrom(from);
    return *this;
  }
  inline PackProperties& operator=(PackProperties&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PackProperties& default_instance() {
    return *internal_default_instance();
  }
  static inline const PackProperties* internal_default_instance() {
    return reinterpret_cast<const PackProperties*>(
               &_PackProperties_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(PackProperties& a, PackProperties& b) {
    a.Swap(&b);
  }
  inline void Swap(PackProperties* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PackProperties* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PackProperties* New() const final {
    return CreateMaybeMessage<PackProperties>(nullptr);
  }

  PackProperties* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PackProperties>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PackProperties& from);
  void MergeFrom(const PackProperties& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PackProperties* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dtpb.PackProperties";
  }
  protected:
  explicit PackProperties(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPropertyFieldNumber = 1,
  };
  // repeated .dtpb.PackProperty property = 1;
  int property_size() const;
  private:
  int _internal_property_size() const;
  public:
  void clear_property();
  ::dtpb::PackProperty* mutable_property(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dtpb::PackProperty >*
      mutable_property();
  private:
  const ::dtpb::PackProperty& _internal_property(int index) const;
  ::dtpb::PackProperty* _internal_add_property();
  public:
  const ::dtpb::PackProperty& property(int index) const;
  ::dtpb::PackProperty* add_property();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dtpb::PackProperty >&
      property() const;

  // @@protoc_insertion_point(class_scope:dtpb.PackProperties)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dtpb::PackProperty > property_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dmfile_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PackProperty

// required uint64 gc_hint_version = 1;
inline bool PackProperty::_internal_has_gc_hint_version() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool PackProperty::has_gc_hint_version() const {
  return _internal_has_gc_hint_version();
}
inline void PackProperty::clear_gc_hint_version() {
  gc_hint_version_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PackProperty::_internal_gc_hint_version() const {
  return gc_hint_version_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PackProperty::gc_hint_version() const {
  // @@protoc_insertion_point(field_get:dtpb.PackProperty.gc_hint_version)
  return _internal_gc_hint_version();
}
inline void PackProperty::_internal_set_gc_hint_version(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  gc_hint_version_ = value;
}
inline void PackProperty::set_gc_hint_version(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_gc_hint_version(value);
  // @@protoc_insertion_point(field_set:dtpb.PackProperty.gc_hint_version)
}

// required uint64 num_rows = 2;
inline bool PackProperty::_internal_has_num_rows() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool PackProperty::has_num_rows() const {
  return _internal_has_num_rows();
}
inline void PackProperty::clear_num_rows() {
  num_rows_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PackProperty::_internal_num_rows() const {
  return num_rows_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PackProperty::num_rows() const {
  // @@protoc_insertion_point(field_get:dtpb.PackProperty.num_rows)
  return _internal_num_rows();
}
inline void PackProperty::_internal_set_num_rows(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  num_rows_ = value;
}
inline void PackProperty::set_num_rows(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_num_rows(value);
  // @@protoc_insertion_point(field_set:dtpb.PackProperty.num_rows)
}

// -------------------------------------------------------------------

// PackProperties

// repeated .dtpb.PackProperty property = 1;
inline int PackProperties::_internal_property_size() const {
  return property_.size();
}
inline int PackProperties::property_size() const {
  return _internal_property_size();
}
inline void PackProperties::clear_property() {
  property_.Clear();
}
inline ::dtpb::PackProperty* PackProperties::mutable_property(int index) {
  // @@protoc_insertion_point(field_mutable:dtpb.PackProperties.property)
  return property_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dtpb::PackProperty >*
PackProperties::mutable_property() {
  // @@protoc_insertion_point(field_mutable_list:dtpb.PackProperties.property)
  return &property_;
}
inline const ::dtpb::PackProperty& PackProperties::_internal_property(int index) const {
  return property_.Get(index);
}
inline const ::dtpb::PackProperty& PackProperties::property(int index) const {
  // @@protoc_insertion_point(field_get:dtpb.PackProperties.property)
  return _internal_property(index);
}
inline ::dtpb::PackProperty* PackProperties::_internal_add_property() {
  return property_.Add();
}
inline ::dtpb::PackProperty* PackProperties::add_property() {
  // @@protoc_insertion_point(field_add:dtpb.PackProperties.property)
  return _internal_add_property();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dtpb::PackProperty >&
PackProperties::property() const {
  // @@protoc_insertion_point(field_list:dtpb.PackProperties.property)
  return property_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace dtpb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_dmfile_2eproto
